<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Product Details | ADD Physical Products</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="icon" href="/public/images/logo.png">
  <style>
    .glass { background: rgba(255,255,255,0.9); backdrop-filter: blur(15px); -webkit-backdrop-filter: blur(15px); }
    .brand-gradient { background: linear-gradient(135deg, #0e2038 0%, #23325c 50%, #1e3a8a 100%); }
    .country-flag { width: 24px; height: 16px; object-fit: cover; border-radius: 2px; }
    .currency-badge { background: linear-gradient(135deg, #fbbf24, #f59e0b); }
    .loading-shimmer { background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%); background-size: 200% 100%; animation: shimmer 1.5s infinite; }
    @keyframes shimmer { 0% { background-position: -200% 0; } 100% { background-position: 200% 0; } }
  </style>
  <script src="/shared/auth-utils.js"></script>
  <script src="/shared/mode-switcher.js"></script>
</head>
<body class="bg-gray-50 min-h-screen">
  <!-- Header for Unsigned Users -->
  <header class="w-full glass shadow-lg border-b border-blue-200 sticky top-0 z-50">
    <div class="max-w-7xl mx-auto flex items-center justify-between px-4 py-3 md:py-4">
      <a href="/" class="flex items-center gap-3 group">
        <img src="/public/images/logo.png" alt="ADD Physical Product Logo" class="h-12 w-12 rounded-xl shadow-lg group-hover:scale-110 transition-transform duration-300" />
        <span class="font-extrabold text-2xl md:text-3xl bg-gradient-to-r from-[#0e2038] to-[#23325c] bg-clip-text text-transparent">ADD Physical Products</span>
      </a>
      <div class="flex items-center gap-2 md:gap-4">
        <!-- Mode Switcher -->
        <div class="mode-switcher-container" data-mode-switch="">
          <!-- Mode switcher will be inserted here by JavaScript -->
        </div>
        <!-- Currency Switcher with Real-time Rates -->
        <div class="relative">
          <select id="currency-switcher" class="px-2 md:px-4 py-2 rounded-lg border-2 border-[#0e2038] text-[#0e2038] font-semibold bg-white/95 shadow-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 cursor-pointer text-sm md:text-base">
            <option value="RWF">ðŸ‡·ðŸ‡¼ RWF</option>
            <option value="USD">ðŸ‡ºðŸ‡¸ USD</option>
            <option value="EUR">ðŸ‡ªðŸ‡º EUR</option>
            <option value="KES">ðŸ‡°ðŸ‡ª KES</option>
            <option value="NGN">ðŸ‡³ðŸ‡¬ NGN</option>
          </select>
          <div id="currency-rate" class="absolute -bottom-6 left-0 text-xs text-gray-600 bg-white px-2 rounded hidden md:block"></div>
        </div>
        
        <!-- Delivery Picker with Flags -->
        <div class="relative">
          <select id="delivery-country" class="px-2 md:px-4 py-2 rounded-lg border-2 border-[#0e2038] text-[#0e2038] font-semibold bg-white/95 shadow-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 cursor-pointer text-sm md:text-base">
            <!-- Countries will be loaded dynamically -->
          </select>
        </div>
        
        <span id="delivery-notice" class="ml-2 font-semibold text-sm text-[#0e2038] flex items-center gap-1">
          <span id="delivery-flag">ðŸ‡·ðŸ‡¼</span>
          <span class="hidden md:inline">Delivering to: <span id="delivery-country-name">Rwanda</span></span>
        </span>
        
        <!-- Auth Buttons -->
        <div class="flex items-center gap-1 md:gap-2">
          <a href="/auth/auth-buyer.html" class="px-2 md:px-4 py-2 rounded-lg font-semibold border-2 border-[#0e2038] text-[#0e2038] bg-white/90 hover:bg-[#0e2038] hover:text-white transition-all duration-300 shadow-md text-xs md:text-sm">Sign In</a>
          <a href="/auth/auth-buyer.html" class="px-2 md:px-4 py-2 rounded-lg font-semibold text-white bg-gradient-to-r from-[#0e2038] to-[#23325c] hover:from-[#23325c] hover:to-[#0e2038] transition-all duration-300 shadow-md text-xs md:text-sm">Create Account</a>
          <a href="/auth/auth-seller.html" class="px-2 md:px-4 py-2 rounded-lg font-semibold border-2 border-green-600 text-green-600 bg-white/90 hover:bg-green-600 hover:text-white transition-all duration-300 shadow-md text-xs md:text-sm">Become a Seller</a>
        </div>
      </div>
    </div>
  </header>

  <main class="pt-16 pb-8">
    <div class="max-w-7xl mx-auto px-4">
      <!-- Loading State -->
      <div id="loading-state" class="text-center py-12">
        <div class="loading-shimmer w-16 h-16 rounded-full mx-auto mb-4"></div>
        <h2 class="text-xl font-semibold text-gray-700 mb-2">Loading Product Details...</h2>
        <p class="text-gray-500">Please wait while we fetch the product information</p>
      </div>

      <!-- Error State -->
      <div id="error-state" class="text-center py-12 hidden">
        <div class="w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4">
          <svg class="w-8 h-8 text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
        </div>
        <h2 class="text-xl font-semibold text-gray-700 mb-2">Product Not Found</h2>
        <p class="text-gray-500 mb-4" id="error-message">The product you're looking for doesn't exist or has been removed.</p>
        <a href="/public/product-list.html" class="inline-block px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">Browse All Products</a>
      </div>

      <!-- Product Content -->
      <div id="product-content" class="hidden">
        <!-- Breadcrumb -->
        <nav class="mb-6">
          <ol class="flex items-center space-x-2 text-sm text-gray-600">
            <li><a href="/public/product-list.html" class="hover:text-blue-600">Products</a></li>
            <li><span class="mx-2">/</span></li>
            <li id="product-category">Category</li>
            <li><span class="mx-2">/</span></li>
            <li class="text-gray-900 font-medium" id="product-name">Product Name</li>
          </ol>
        </nav>

        <div class="flex flex-col lg:flex-row gap-8">
          <!-- Product Images -->
          <div class="lg:w-1/2">
            <div class="relative">
              <img id="main-product-image" src="/public/images/placeholder.jpg" alt="Product" class="w-full h-96 object-cover rounded-2xl shadow-lg">
              <div id="image-gallery" class="flex gap-2 mt-4 overflow-x-auto">
                <!-- Gallery images will be loaded here -->
              </div>
            </div>
          </div>
          
          <!-- Product Info -->
          <div class="lg:w-1/2">
            <h1 id="product-title" class="text-3xl font-bold text-gray-900 mb-4">Product Title</h1>
            
            <!-- Price Section -->
            <div class="mb-6">
              <div class="flex items-center gap-3 mb-2">
                <span id="product-price" class="text-3xl font-bold text-[#0e2038]">$0.00</span>
                <span id="product-currency" class="text-lg text-gray-600">USD</span>
                <span id="product-discount" class="text-lg text-red-500 font-medium hidden">$0.00</span>
              </div>
              <div id="price-details" class="text-sm text-gray-600">
                <!-- Price details will be shown here -->
              </div>
            </div>

            <!-- Product Description -->
            <div class="mb-6">
              <h3 class="font-semibold text-gray-900 mb-2">Description</h3>
              <p id="product-description" class="text-gray-700 leading-relaxed">Product description will be loaded here...</p>
            </div>

            <!-- Product Details -->
            <div class="bg-white rounded-xl shadow-lg p-6 mb-6">
              <h3 class="font-semibold text-gray-900 mb-4">Product Details</h3>
              <div class="grid grid-cols-2 gap-4 text-sm">
                <div>
                  <span class="text-gray-600">Brand:</span>
                  <span id="product-brand" class="ml-2 font-medium">-</span>
                </div>
                <div>
                  <span class="text-gray-600">Condition:</span>
                  <span id="product-condition" class="ml-2 font-medium">-</span>
                </div>
                <div>
                  <span class="text-gray-600">Stock:</span>
                  <span id="product-stock" class="ml-2 font-medium">-</span>
                </div>
                <div>
                  <span class="text-gray-600">Seller:</span>
                  <span id="product-seller" class="ml-2 font-medium">-</span>
                </div>
                <div>
                  <span class="text-gray-600">MOQ:</span>
                  <span id="product-moq" class="ml-2 font-medium">-</span>
                </div>
                <div>
                  <span class="text-gray-600">Category:</span>
                  <span id="product-category-name" class="ml-2 font-medium">-</span>
                </div>
              </div>
            </div>

            <!-- Add to Cart Form -->
            <div class="bg-white rounded-xl shadow-lg p-6 mb-6">
              <form id="add-to-cart-form" class="space-y-4">
                <div>
                  <label for="quantity" class="block text-sm font-medium text-gray-700 mb-2">Quantity</label>
                  <div class="flex items-center space-x-3">
                    <button type="button" id="decrease-qty" class="w-10 h-10 rounded-lg border border-gray-300 flex items-center justify-center hover:bg-gray-50">-</button>
                    <input type="number" id="quantity" name="quantity" value="1" min="1" max="999" 
                           class="w-20 text-center border border-gray-300 rounded-lg py-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                    <button type="button" id="increase-qty" class="w-10 h-10 rounded-lg border border-gray-300 flex items-center justify-center hover:bg-gray-50">+</button>
                    <span id="stock-info" class="text-sm text-gray-500 ml-4">In stock</span>
                  </div>
                </div>
                
                <div class="flex gap-3">
                  <button type="submit" class="flex-1 bg-blue-600 text-white px-6 py-3 rounded-lg font-semibold hover:bg-blue-700 transition-colors">
                    <svg width="20" height="20" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" class="inline mr-2">
                      <path stroke-linecap="round" stroke-linejoin="round" d="M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-1.1 5M7 13l-1.1 5m0 0h9.1M16 18a2 2 0 11-4 0 2 2 0 014 0zM9 18a2 2 0 11-4 0 2 2 0 014 0z"></path>
                    </svg>
                    Add to Cart
                  </button>
                  <button type="button" id="add-to-wishlist" class="px-6 py-3 border-2 border-gray-300 rounded-lg font-semibold hover:bg-gray-50 transition-colors">
                    <svg width="20" height="20" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" class="inline mr-2">
                      <path stroke-linecap="round" stroke-linejoin="round" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
                    </svg>
                    Wishlist
                  </button>
                </div>
              </form>
            </div>

            <!-- Call to Action for Sign Up -->
            <div id="signup-cta" class="bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-xl p-6 mb-6 hidden">
              <h3 class="font-semibold text-blue-900 mb-2">Get the Best Deals!</h3>
              <p class="text-blue-700 text-sm mb-4">Sign up to track orders, save favorites, and get exclusive offers.</p>
              <div class="flex gap-3">
                <a href="/auth/auth-buyer.html" class="flex-1 bg-blue-600 text-white px-4 py-3 rounded-lg text-center font-semibold hover:bg-blue-700 transition-colors">Sign Up Now</a>
                <a href="/auth/auth-buyer.html" class="flex-1 border-2 border-blue-600 text-blue-600 px-4 py-3 rounded-lg text-center font-semibold hover:bg-blue-50 transition-colors">Sign In</a>
              </div>
            </div>

            <!-- Contact Seller -->
            <div class="bg-white rounded-xl shadow-lg p-6">
              <h3 class="font-semibold text-gray-900 mb-2">Interested in this product?</h3>
              <p class="text-gray-600 text-sm mb-4">Contact the seller directly to discuss pricing, shipping, and bulk orders.</p>
              <a href="/auth/auth-buyer.html" class="w-full bg-green-600 text-white py-3 rounded-lg text-center font-semibold hover:bg-green-700 transition-colors block">
                Contact Seller
              </a>
            </div>
          </div>
        </div>

        
        <!-- Product Reviews Section -->
        <div id="product-reviews-section" class="mt-12">
          <h2 class="text-2xl font-bold text-gray-900 mb-6">Customer Reviews</h2>
          
          <!-- Review Summary -->
          <div class="bg-white rounded-xl shadow-lg p-6 mb-6">
            <div class="flex items-center space-x-4">
              <div class="text-center">
                <div class="text-3xl font-bold text-gray-900" id="average-rating">0.0</div>
                <div class="flex justify-center space-x-1 mb-2" id="rating-stars">
                  <!-- Stars will be populated by JavaScript -->
                </div>
                <div class="text-sm text-gray-600" id="rating-count">0 reviews</div>
              </div>
              <div class="flex-1">
                <div id="rating-breakdown" class="space-y-2">
                  <!-- Rating breakdown will be populated by JavaScript -->
                </div>
              </div>
            </div>
          </div>
          
          <!-- Add Review Form -->
          <div id="add-review-form" class="bg-white rounded-xl shadow-lg p-6 mb-6 hidden">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">Write a Review</h3>
            <form id="review-form" class="space-y-4">
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Rating</label>
                <div class="flex space-x-1" id="rating-input">
                  <button type="button" class="star-btn text-2xl text-gray-300 hover:text-yellow-400" data-rating="1">â˜…</button>
                  <button type="button" class="star-btn text-2xl text-gray-300 hover:text-yellow-400" data-rating="2">â˜…</button>
                  <button type="button" class="star-btn text-2xl text-gray-300 hover:text-yellow-400" data-rating="3">â˜…</button>
                  <button type="button" class="star-btn text-2xl text-gray-300 hover:text-yellow-400" data-rating="4">â˜…</button>
                  <button type="button" class="star-btn text-2xl text-gray-300 hover:text-yellow-400" data-rating="5">â˜…</button>
                </div>
                <input type="hidden" id="selected-rating" name="rating" required>
              </div>
              <div>
                <label for="review-title" class="block text-sm font-medium text-gray-700 mb-2">Title</label>
                <input type="text" id="review-title" name="title" 
                       class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
              </div>
              <div>
                <label for="review-comment" class="block text-sm font-medium text-gray-700 mb-2">Review</label>
                <textarea id="review-comment" name="comment" rows="4" required
                          class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"></textarea>
              </div>
              <div class="flex justify-end space-x-3">
                <button type="button" id="cancel-review" class="px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50">
                  Cancel
                </button>
                <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
                  Submit Review
                </button>
              </div>
            </form>
          </div>
          
          <!-- Reviews List -->
          <div id="reviews-list" class="space-y-4">
            <!-- Reviews will be populated by JavaScript -->
          </div>
        </div>

        <!-- Related Products Section -->
        <div class="mt-12">
          <h2 class="text-2xl font-bold text-gray-900 mb-6">Related Products</h2>
          <div id="related-products" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            <!-- Related products will be loaded here -->
          </div>
        </div>
      </div>
    </div>
  </main>

  <!-- Footer -->
  <footer class="bg-gray-800 text-white py-8 mt-16">
    <div class="max-w-7xl mx-auto px-4">
      <div class="grid grid-cols-1 md:grid-cols-4 gap-8">
        <div>
          <h3 class="text-lg font-semibold mb-4">About ADD</h3>
          <p class="text-gray-300">Africa's premier e-commerce platform connecting buyers with trusted sellers across the continent.</p>
        </div>
        <div>
          <h3 class="text-lg font-semibold mb-4">Quick Links</h3>
          <ul class="space-y-2">
            <li><a href="/public/about.html" class="text-gray-300 hover:text-white">About Us</a></li>
            <li><a href="/public/contact.html" class="text-gray-300 hover:text-white">Contact</a></li>
            <li><a href="/public/faq.html" class="text-gray-300 hover:text-white">FAQ</a></li>
          </ul>
        </div>
        <div>
          <h3 class="text-lg font-semibold mb-4">For Sellers</h3>
          <ul class="space-y-2">
            <li><a href="/auth/auth-seller.html" class="text-gray-300 hover:text-white">Become a Seller</a></li>
            <li><a href="/public/how-it-works.html" class="text-gray-300 hover:text-white">How It Works</a></li>
          </ul>
        </div>
        <div>
          <h3 class="text-lg font-semibold mb-4">Legal</h3>
          <ul class="space-y-2">
            <li><a href="/public/privacy-policy.html" class="text-gray-300 hover:text-white">Privacy Policy</a></li>
            <li><a href="/public/terms-and-conditions.html" class="text-gray-300 hover:text-white">Terms & Conditions</a></li>
          </ul>
        </div>
      </div>
      <div class="border-t border-gray-700 mt-8 pt-8 text-center">
        <p class="text-gray-300">&copy; 2024 ADD Physical Products. All rights reserved.</p>
      </div>
    </div>
  </footer>

  <script>
    // --- GLOBAL STATE ---
    let currentProduct = null;
    let currencyRates = {
      USD: 1,
      RWF: 1200,
      EUR: 0.85,
      KES: 100,
      NGN: 400
    };
    let selectedCurrency = localStorage.getItem('selectedCurrency') || 'USD';
    let selectedCountry = localStorage.getItem('selectedCountry') || 'Rwanda';
    let countries = [];

    // --- LOAD COUNTRIES ---
    async function loadCountries() {
      try {
        console.log('Loading countries...');
        const response = await fetch('/public/countries.json');
        countries = await response.json();
        console.log('Countries loaded:', countries.length);
        populateCountrySelect();
      } catch (error) {
        console.error('Error loading countries:', error);
        // Fallback countries
        countries = [
          {name: "Rwanda", code: "RW", flag: "https://flagcdn.com/rw.svg"},
          {name: "Kenya", code: "KE", flag: "https://flagcdn.com/ke.svg"},
          {name: "Nigeria", code: "NG", flag: "https://flagcdn.com/ng.svg"},
          {name: "South Africa", code: "ZA", flag: "https://flagcdn.com/za.svg"},
          {name: "Ghana", code: "GH", flag: "https://flagcdn.com/gh.svg"},
          {name: "Uganda", code: "UG", flag: "https://flagcdn.com/ug.svg"},
          {name: "Tanzania", code: "TZ", flag: "https://flagcdn.com/tz.svg"}
        ];
        console.log('Using fallback countries:', countries.length);
        populateCountrySelect();
      }
    }

    function populateCountrySelect() {
      const select = document.getElementById('delivery-country');
      if (!select) return;
      
      select.innerHTML = countries.map(country => 
        `<option value="${country.name}" data-flag="${country.flag}">${country.name}</option>`
      ).join('');
      
      // Set the selected value and trigger change event
      select.value = selectedCountry;
      updateDeliveryNotice();
      
      // Trigger change event to ensure proper initialization
      const event = new Event('change', { bubbles: true });
      select.dispatchEvent(event);
    }

    function updateDeliveryNotice() {
      const country = countries.find(c => c.name === selectedCountry);
      if (country) {
        const flagElement = document.getElementById('delivery-flag');
        const nameElement = document.getElementById('delivery-country-name');
        
        if (flagElement) {
          flagElement.innerHTML = `<img src="${country.flag}" class="country-flag" alt="${country.name}">`;
        }
        if (nameElement) {
          nameElement.textContent = country.name;
        }
      }
    }

    // --- CURRENCY CONVERSION ---
    async function fetchCurrencyRates() {
      try {
        const response = await fetch('https://v6.exchangerate-api.com/v6/c5f524e323378439dad2a43f/latest/USD');
        const data = await response.json();
        if (data && data.result === 'success') {
          currencyRates = data.conversion_rates;
          localStorage.setItem('currencyRates', JSON.stringify(currencyRates));
          updateCurrencyDisplay();
        }
      } catch (error) {
        console.error('Error fetching currency rates:', error);
        // Fallback rates are already set in global state
        updateCurrencyDisplay();
      }
    }

    function convertPrice(price, fromCurrency = 'USD', toCurrency = selectedCurrency) {
      // Ensure price is a number
      const numericPrice = parseFloat(price);
      if (isNaN(numericPrice)) {
        console.warn('Invalid price value:', price);
        return 0;
      }
      
      // If currencies are the same, return the price as is
      if (fromCurrency === toCurrency) return numericPrice;
      
      // If currency rates are not available, return the original price
      if (!currencyRates[fromCurrency] || !currencyRates[toCurrency]) {
        console.warn('Currency rates not available for:', fromCurrency, 'or', toCurrency);
        return numericPrice;
      }
      
      // Convert through USD
      const usdAmount = numericPrice / currencyRates[fromCurrency];
      return usdAmount * currencyRates[toCurrency];
    }

    function updateCurrencyDisplay() {
      if (!currentProduct) return;

      const currencySymbols = { USD: '$', RWF: 'FRw', EUR: 'â‚¬', KES: 'Ksh', NGN: 'â‚¦' };
      const symbol = currencySymbols[selectedCurrency] || selectedCurrency;
      
      // Update main price
      const priceElement = document.getElementById('product-price');
      if (priceElement) {
        const originalPrice = parseFloat(currentProduct.price);
        const originalCurrency = currentProduct.currency || 'USD';
        const convertedPrice = convertPrice(originalPrice, originalCurrency, selectedCurrency);
        priceElement.textContent = `${symbol}${convertedPrice.toFixed(2)}`;
      }

      // Update discount price if exists
      const discountElement = document.getElementById('product-discount');
      if (discountElement && currentProduct.discount_price) {
        const originalDiscountPrice = parseFloat(currentProduct.discount_price);
        const originalCurrency = currentProduct.currency || 'USD';
        const convertedDiscountPrice = convertPrice(originalDiscountPrice, originalCurrency, selectedCurrency);
        discountElement.textContent = `${symbol}${convertedDiscountPrice.toFixed(2)}`;
        discountElement.classList.remove('hidden');
      }

      // Update currency display
      const currencyElement = document.getElementById('product-currency');
      if (currencyElement) {
        currencyElement.textContent = selectedCurrency;
      }

      // Update currency rate display
      const rateElement = document.getElementById('currency-rate');
      if (rateElement && selectedCurrency !== 'USD') {
        const rate = currencyRates[selectedCurrency];
        rateElement.textContent = `1 USD = ${rate?.toFixed(2) || 'N/A'} ${selectedCurrency}`;
      }
    }

    // --- FETCH PRODUCT DETAILS ---
    async function fetchProductDetails() {
      try {
        const urlParams = new URLSearchParams(window.location.search);
        const productId = urlParams.get('id');
        
        if (!productId) {
          throw new Error('Product ID not found in URL');
        }

        const response = await fetch(`/api/products/${productId}`);
        const data = await response.json();
        
        if (!data.success) {
          throw new Error(data.error || 'Failed to load product details');
        }

        currentProduct = data.product;
        renderProductDetails();
        updateCurrencyDisplay();
        fetchRelatedProducts();
        
        // Hide loading, show content
        document.getElementById('loading-state').classList.add('hidden');
        document.getElementById('product-content').classList.remove('hidden');
        
      } catch (error) {
        console.error('Error fetching product details:', error);
        document.getElementById('loading-state').classList.add('hidden');
        document.getElementById('error-state').classList.remove('hidden');
        document.getElementById('error-message').textContent = error.message;
      }
    }

    function renderProductDetails() {
      if (!currentProduct) return;

      // Update breadcrumb
      document.getElementById('product-category').textContent = currentProduct.category_name || 'Category';
      document.getElementById('product-name').textContent = currentProduct.name;

      // Update main product info
      document.getElementById('product-title').textContent = currentProduct.name;
      document.getElementById('product-description').textContent = currentProduct.description || 'No description available';

      // Update product details
      document.getElementById('product-brand').textContent = currentProduct.brand || '-';
      document.getElementById('product-condition').textContent = currentProduct.condition || '-';
      document.getElementById('product-stock').textContent = currentProduct.stock || '0';
      document.getElementById('product-seller').textContent = currentProduct.seller_name || 'Verified Seller';
      document.getElementById('product-moq').textContent = currentProduct.moq || '1';
      document.getElementById('product-category-name').textContent = currentProduct.category_name || '-';

      // Update main image
      const mainImage = document.getElementById('main-product-image');
      if (currentProduct.main_image) {
        mainImage.src = `/uploads/${currentProduct.main_image}`;
        mainImage.alt = currentProduct.name;
      }

      // Update gallery images
      const galleryContainer = document.getElementById('image-gallery');
      if (currentProduct.gallery_images && currentProduct.gallery_images.length > 0) {
        galleryContainer.innerHTML = currentProduct.gallery_images.map(image => `
          <img src="/uploads/${image}" alt="${currentProduct.name}" 
               class="w-20 h-20 object-cover rounded-lg cursor-pointer hover:opacity-75 transition-opacity"
               onclick="changeMainImage('/uploads/${image}')">
        `).join('');
      }

      // Set initial prices (will be updated by currency conversion)
      const priceElement = document.getElementById('product-price');
      const currencyElement = document.getElementById('product-currency');
      priceElement.textContent = `${currentProduct.currency || 'USD'} ${currentProduct.price}`;
      currencyElement.textContent = currentProduct.currency || 'USD';
    }

    function changeMainImage(imageSrc) {
      document.getElementById('main-product-image').src = imageSrc;
    }

    async function fetchRelatedProducts() {
      try {
        const response = await fetch('/api/products?limit=4');
        const data = await response.json();
        
        if (data.success && data.products.length > 0) {
          renderRelatedProducts(data.products);
        }
      } catch (error) {
        console.error('Error fetching related products:', error);
      }
    }

    function renderRelatedProducts(products) {
      const container = document.getElementById('related-products');
      container.innerHTML = products.map(product => `
        <div class="bg-white rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-shadow">
          <div class="relative">
            <img src="${product.main_image ? `/uploads/${product.main_image}` : '/public/images/placeholder.jpg'}" 
                 alt="${product.name}" 
                 class="w-full h-48 object-cover"
                 onerror="this.src='/public/images/logo.png'">
            ${product.discount_price ? `
              <div class="absolute top-2 right-2 bg-red-500 text-white text-xs px-2 py-1 rounded">
                ${Math.round(((product.price - product.discount_price) / product.price) * 100)}% OFF
              </div>
            ` : ''}
          </div>
          
          <div class="p-4">
            <h3 class="font-semibold text-gray-900 mb-2 line-clamp-2">${product.name}</h3>
            <div class="flex items-center justify-between mb-3">
              <span class="text-lg font-bold text-gray-900">
                ${product.currency || 'USD'} ${product.discount_price || product.price}
              </span>
            </div>
            <button onclick="viewProduct(${product.id})" 
                    class="w-full bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700 transition-colors text-sm">
              View Details
            </button>
          </div>
        </div>
      `).join('');
    }

    function viewProduct(productId) {
      window.location.href = `/public/product-detail.html?id=${productId}`;
    }

    // --- EVENT LISTENERS ---
    document.addEventListener('DOMContentLoaded', function() {
      // Initialize currency switcher
      const currencySwitcher = document.getElementById('currency-switcher');
      if (currencySwitcher) {
        console.log('Initializing currency switcher with:', selectedCurrency);
        currencySwitcher.value = selectedCurrency;
        currencySwitcher.addEventListener('change', function() {
          console.log('Currency changed to:', this.value);
          selectedCurrency = this.value;
          localStorage.setItem('selectedCurrency', selectedCurrency);
          updateCurrencyDisplay();
        });
        
        // Trigger initial currency display update
        updateCurrencyDisplay();
      } else {
        console.error('Currency switcher element not found');
      }

      // Initialize delivery country picker
      const deliveryCountry = document.getElementById('delivery-country');
      if (deliveryCountry) {
        console.log('Initializing delivery country picker with:', selectedCountry);
        deliveryCountry.addEventListener('change', function() {
          console.log('Delivery country changed to:', this.value);
          selectedCountry = this.value;
          localStorage.setItem('selectedCountry', selectedCountry);
          updateDeliveryNotice();
        });
      } else {
        console.error('Delivery country element not found');
      }

      // Initialize everything
      loadCountries();
      fetchCurrencyRates();
      fetchProductDetails();
    });
  </script>
</body>
</html>
