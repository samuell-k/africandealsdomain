/**
 * Reusable Seller Navigation Component
 * This component can be injected into any seller page to provide consistent navigation
 */

class SellerNavigation {
  constructor(options = {}) {
    this.currentPage = options.currentPage || '';
    this.userName = options.userName || 'Seller';
    this.storeName = options.storeName || 'My Store';
  }

  /**
   * Generate the navigation HTML
   */
  generateHTML() {
    return `
      <!-- Seller Navigation Header -->
      <nav class="w-full bg-white shadow-md z-50 sticky top-0 flex items-center justify-between px-4 md:px-8 h-16">
        <div class="flex items-center gap-4">
          <a href="/seller/dashboard.html" class="flex items-center gap-2">
            <img src="/public/images/logo.png" alt="ADD Logo" class="h-10 w-10 rounded-xl shadow" />
            <span class="font-extrabold text-xl md:text-2xl text-blue-700 tracking-tight">ADD Seller</span>
          </a>
          <div class="hidden md:flex gap-4 ml-8">
            <a href="/seller/dashboard.html" class="nav-link ${this.currentPage === 'dashboard' ? 'text-blue-700 font-semibold' : 'text-gray-700 hover:text-blue-700'} transition-colors">Dashboard</a>
            <a href="/seller/product-list.html" class="nav-link ${this.currentPage === 'products' ? 'text-blue-700 font-semibold' : 'text-gray-700 hover:text-blue-700'} transition-colors">My Products</a>
            <a href="/seller/orders.html" class="nav-link ${this.currentPage === 'orders' ? 'text-blue-700 font-semibold' : 'text-gray-700 hover:text-blue-700'} transition-colors">Orders</a>
            <a href="/seller/inventory.html" class="nav-link ${this.currentPage === 'inventory' ? 'text-blue-700 font-semibold' : 'text-gray-700 hover:text-blue-700'} transition-colors">Inventory</a>
            <a href="/seller/promotions.html" class="nav-link ${this.currentPage === 'promotions' ? 'text-blue-700 font-semibold' : 'text-gray-700 hover:text-blue-700'} transition-colors">Promotions</a>
            <a href="/seller/messages.html" class="nav-link ${this.currentPage === 'messages' ? 'text-blue-700 font-semibold' : 'text-gray-700 hover:text-blue-700'} transition-colors">Chat</a>
          </div>
        </div>
        <div class="flex items-center gap-2">
          <!-- Language Switcher -->
          <select id="lang-switch" class="border rounded px-2 py-1 text-xs">
            <option value="en">English</option>
            <option value="rw">Kinyarwanda</option>
            <option value="fr">French</option>
            <option value="sw">Kiswahili</option>
            <option value="ar">العربية</option>
            <option value="ha">Hausa</option>
            <option value="yo">Yoruba</option>
          </select>
          <!-- Currency Switcher -->
          <select id="currency-switch" class="border rounded px-2 py-1 text-xs">
            <option value="RWF">RWF</option>
            <option value="USD">USD</option>
            <option value="EUR">EUR</option>
          </select>
          <!-- Profile Dropdown -->
          <div class="relative ml-2">
            <button id="profile-dropdown-btn" class="flex items-center gap-1 px-3 py-1 rounded hover:bg-blue-50 font-semibold transition-colors">
              <svg width="22" height="22" fill="none" stroke="currentColor" stroke-width="2.5" class="text-blue-600" viewBox="0 0 24 24"><circle cx="12" cy="8" r="4"/><path d="M4 20c0-4 8-4 8-4s8 0 8 4"/></svg>
              <span id="profile-name">${this.storeName}</span>
              <svg width="16" height="16" fill="none" stroke="currentColor" stroke-width="2" class="ml-1 text-gray-400 transition-transform" id="dropdown-arrow" viewBox="0 0 24 24"><path d="M6 9l6 6 6-6"/></svg>
            </button>
            <div id="profile-dropdown-menu" class="dropdown-menu absolute right-0 mt-2 min-w-[220px] bg-white rounded-xl shadow-lg z-50 hidden p-2">
              <!-- Profile Section -->
              <div class="px-3 py-2 border-b border-gray-100 mb-2">
                <div class="font-semibold text-sm text-gray-800" id="profile-greeting">Hello, ${this.userName}</div>
                <div class="text-xs text-gray-500">Manage your store</div>
              </div>
              
              <!-- Main Menu Items -->
              <div class="space-y-1">
                <a href="/seller/profile.html" class="flex items-center gap-3 px-3 py-2 hover:bg-blue-50 rounded-lg text-sm transition-colors ${this.currentPage === 'profile' ? 'text-blue-600 font-semibold bg-blue-50' : 'text-gray-700'}">
                  <svg width="16" height="16" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"/><circle cx="12" cy="7" r="4"/></svg>
                  <span>My Profile</span>
                </a>
                <a href="/seller/analytics.html" class="flex items-center gap-3 px-3 py-2 hover:bg-blue-50 rounded-lg text-sm transition-colors text-gray-700">
                  <svg width="16" height="16" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M9 19c-5 0-8-3-8-8s3-8 8-8 8 3 8 8-3 8-8 8z"/><path d="M8.5 8.5l.01-.01"/><path d="M16 8.5l.01-.01"/><path d="M15 13s-1.5 2-3 2-3-2-3-2"/></svg>
                  <span>Analytics</span>
                </a>
                <a href="/seller/settings.html" class="flex items-center gap-3 px-3 py-2 hover:bg-blue-50 rounded-lg text-sm transition-colors text-gray-700">
                  <svg width="16" height="16" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><circle cx="12" cy="12" r="3"/><path d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1 1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"/></svg>
                  <span>Settings</span>
                </a>
                <a href="/seller/support.html" class="flex items-center gap-3 px-3 py-2 hover:bg-blue-50 rounded-lg text-sm transition-colors text-gray-700">
                  <svg width="16" height="16" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M9 12l2 2 4-4"/><path d="M21 12c.552 0 1-.448 1-1V5c0-.552-.448-1-1-1H3c-.552 0-1 .448-1 1v6c0 .552.448 1 1 1h9l4 4-4-4z"/></svg>
                  <span>Support</span>
                </a>
                <hr class="my-2">
                <button onclick="SellerNavigation.logout()" class="flex items-center gap-3 px-3 py-2 hover:bg-red-50 rounded-lg text-sm transition-colors text-red-600 w-full text-left">
                  <svg width="16" height="16" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"/><polyline points="16,17 21,12 16,7"/><line x1="21" y1="12" x2="9" y2="12"/></svg>
                  <span>Logout</span>
                </button>
              </div>
            </div>
          </div>
        </div>
      </nav>
    `;
  }

  /**
   * Initialize the navigation functionality
   */
  initialize() {
    // Profile dropdown toggle
    const profileButton = document.getElementById('profile-dropdown-btn');
    const profileDropdown = document.getElementById('profile-dropdown-menu');
    const dropdownArrow = document.getElementById('dropdown-arrow');
    
    if (profileButton && profileDropdown) {
      profileButton.addEventListener('click', function(e) {
        e.stopPropagation();
        profileDropdown.classList.toggle('hidden');
        dropdownArrow.style.transform = profileDropdown.classList.contains('hidden') ? 'rotate(0deg)' : 'rotate(180deg)';
      });
      
      // Close dropdown when clicking outside
      document.addEventListener('click', function() {
        profileDropdown.classList.add('hidden');
        dropdownArrow.style.transform = 'rotate(0deg)';
      });
    }
    
    // Load user info from localStorage
    const user = JSON.parse(localStorage.getItem('user') || '{}');
    if (user.name) {
      const profileNameElement = document.getElementById('profile-name');
      const profileGreetingElement = document.getElementById('profile-greeting');
      if (profileNameElement) {
        profileNameElement.textContent = user.store_name || user.name;
      }
      if (profileGreetingElement) {
        profileGreetingElement.textContent = `Hello, ${user.name}`;
      }
    }
  }

  /**
   * Static method to inject navigation into a page
   */
  static inject(containerId, options = {}) {
    const container = document.getElementById(containerId);
    if (!container) {
      console.error(`Container with ID '${containerId}' not found`);
      return null;
    }

    const navigation = new SellerNavigation(options);
    container.innerHTML = navigation.generateHTML();
    
    // Initialize after DOM is ready
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', () => navigation.initialize());
    } else {
      navigation.initialize();
    }

    return navigation;
  }

  /**
   * Static logout method
   */
  static logout() {
    localStorage.removeItem('authToken');
    localStorage.removeItem('user');
    localStorage.removeItem('token');
    window.location.href = '/auth/auth-seller.html';
  }
}

// Make it globally available
window.SellerNavigation = SellerNavigation;